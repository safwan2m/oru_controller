#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netconf/libnetconf2.h>

int main(int argc, char *argv[]) {
// Create a NETCONF session
struct nc_session *session = nc_connect("localhost", 830, "username", "password");
if (session == NULL) {
printf("Failed to connect to NETCONF server\n");
return 1;
}

// Get the configuration of the device
nc_rpc *rpc = nc_rpc_new("get-config");
if (rpc == NULL) {
printf("Failed to create NETCONF RPC\n");
nc_session_free(session);
return 1;
}

// Send the RPC request
nc_rpc_send(session, rpc);

// Receive the RPC response
nc_rpc_reply *reply = nc_rpc_recv(session);
if (reply == NULL) {
printf("Failed to receive NETCONF RPC reply\n");
nc_session_free(session);
nc_rpc_free(rpc);
return 1;
}

// Print the configuration data
printf("%s\n", nc_rpc_reply_get_data(reply));

// Free the RPC objects
nc_rpc_free(rpc);
nc_rpc_reply_free(reply);

// Close the NETCONF session
nc_session_free(session);

return 0;
}
